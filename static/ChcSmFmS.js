import{P,r as y,s as _,C as b,K as q}from"./CsCRyp1z.js";const $=P("useCartDelModalStore",()=>{const i=y(!1),u=y(!1);function h(s){u.value=!!s,i.value=!0}function r(){i.value=!1}return{isDelModalShow:i,isDeleteAll:u,modalShow:h,modalHide:r}}),A=P("useCartStore",()=>{const{isDeleteAll:i}=_($()),{modalHide:u}=$(),h=q(),{apiPath:r,apiBaseUrl:s}=h.public,e=y([]),n=y([]),v=b(()=>e.value.reduce((t,o)=>{const c=o.originQty||o.qty;return t+c*o.product.price},0));function m(t){n.value=[...t]}async function g({product:t,qty:o=1}){if(!(t!=null&&t.id))return;t.qty=o,t.product_id=t.id;const d={method:"POST",body:{data:{product_id:t.id,qty:o}}};try{const a=await $fetch(`${s}/api/${r}/cart`,{...d});console.log("res",a.data);const l=e.value.findIndex(E=>E.product_id===a.data.product_id);l!==-1?e.value[l].qty++:e.value.push(a.data)}catch(a){console.error(a)}}async function D(){const t={method:"GET"};try{const o=await $fetch(`${s}/api/${r}/cart`,{...t});console.log("res",o),e.value=o.data.carts}catch(o){console.error(o)}}async function C(t){const{qty:o,id:c}=t,a={method:"PUT",body:{data:{product_id:t.product.id,qty:o}}},l=`${s}/api/${r}/cart/${c}`;try{const f=await $fetch(l,{...a});console.log(f),t.originQty=t.qty}catch(f){console.error(f)}}async function T(){i.value?p():S()}async function S(){for(let t=0;t<n.value.length;t++){const o=n.value[t],c=`${s}/api/${r}/cart/${o}`,d={method:"DELETE"};try{const a=await $fetch(c,{...d});console.log(a),e.value=e.value.filter(l=>l.id!==o)}catch(a){console.error(a)}}u(),n.value=[],v.value=e.value.reduce((t,o)=>t+o.final_total,0)}async function p(){const t=`${s}/api/${r}/carts`,o={method:"DELETE"};try{const c=await $fetch(t,{...o});console.log(c),e.value=[]}catch(c){console.error(c)}finally{u(),v.value=0}}function w(){e.value=[],n.value=[]}return{cartData:e,deleteProductsIdArray:n,final_total:v,addProductToCart:g,updDelProdId:m,getCartData:D,updateProductQty:C,deleteProduct:T,deleteAllProducts:p,cartDataInit:w}});export{$ as a,A as u};
